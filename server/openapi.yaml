openapi: 3.1.0
info:
  title: ADK Video Analysis API
  version: 1.0.0
  description: |
    FastAPI backend for multimodal live analysis using ADK. Includes a WebSocket
    endpoint for realtime audio/video/text and simple HTTP utilities.
servers:
  - url: http://localhost:8000
    description: Local development
paths:
  /health:
    get:
      summary: Health check
      operationId: getHealth
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  /sessions/{user_id}:
    get:
      summary: List sessions for a user
      operationId: listUserSessions
      parameters:
        - name: user_id
          in: path
          required: true
          description: User identifier
          schema:
            type: string
      responses:
        '200':
          description: Sessions response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsListResponse'
  /ws/{client_id}:
    description: |
      WebSocket endpoint for realtime multimodal interaction. Not a formal HTTP
      request; documented here via a vendor extension for convenience.
    parameters:
      - name: client_id
        in: path
        required: true
        description: Client identifier for the WebSocket session
        schema:
          type: string
    x-websocket:
      url: ws://localhost:8000/ws/{client_id}
      notes: |
        The server accepts text frames that are either JSON objects of specific
        message shapes (see clientMessages) or plain text (treated as user text).
        The server sends plain text frames for model text responses and JSON
        frames for audio as documented in serverMessages.
      clientMessages:
        oneOf:
          - $ref: '#/components/schemas/WsClientMessageAudio'
          - $ref: '#/components/schemas/WsClientMessageVideo'
          - $ref: '#/components/schemas/WsClientMessageText'
          - $ref: '#/components/schemas/WsClientMessageMode'
      serverMessages:
        oneOf:
          - $ref: '#/components/schemas/WsServerMessageAudio'
        description: |
          In addition to the JSON audio frames above, plain text frames are used
          for model text responses.

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: healthy
        active_connections:
          type: integer
          minimum: 0
          example: 1
      required: [status, active_connections]

    SessionsListResponse:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          example: 2
        sessions:
          type: array
          items:
            type: string
          example: ["3f2f8d2a-0b6a-4a67-a5e5-2b9c1c1e1e1e", "9a7b1c0d-1e2f-3a4b-5c6d-7e8f9a0b1c2d"]
      required: [count, sessions]

    WsClientMessageAudio:
      type: object
      description: Send PCM audio chunk as base64
      properties:
        type:
          type: string
          enum: [audio]
        data:
          type: string
          format: byte
          description: Base64-encoded PCM (mime 'audio/pcm;rate={SEND_SAMPLE_RATE}')
      required: [type, data]

    WsClientMessageVideo:
      type: object
      description: Send a single JPEG frame as base64
      properties:
        type:
          type: string
          enum: [video]
        data:
          type: string
          format: byte
          description: Base64-encoded JPEG bytes
        mode:
          type: string
          description: Source hint, e.g. 'webcam' or 'upload'
          example: webcam
        timestamp:
          type: number
          description: Optional client-side timestamp (ms)
      required: [type, data]

    WsClientMessageText:
      type: object
      description: Send user text
      properties:
        type:
          type: string
          enum: [text]
        data:
          type: string
      required: [type, data]

    WsClientMessageMode:
      type: object
      description: |
        Set response style mode for this client. Accepted values are
        'beginner', 'intermediate', or 'advanced'. Japanese aliases are also
        accepted by the server: '初級' → beginner, '中級' → intermediate, '上級' → advanced.
      properties:
        type:
          type: string
          enum: [mode]
        data:
          type: string
          enum: [beginner, intermediate, advanced]
      required: [type, data]

    WsServerMessageAudio:
      type: object
      description: Model audio response chunk as base64
      properties:
        type:
          type: string
          enum: [audio]
        data:
          type: string
          format: byte
          description: Base64-encoded audio bytes from model
      required: [type, data]

